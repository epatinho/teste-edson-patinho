(()=>{"use strict";const t="spotify-app-cache-v1",e=([{'revision':'b37a6acc56705312faae18df95a5fea5','url':'./index.html'},{'revision':null,'url':'./static/css/main.e6c13ad2.css'},{'revision':null,'url':'./static/js/main.424ac383.js'}],["/","/index.html","/static/css/","/static/js/","/manifest.json","".concat(".","/logo192.png"),"".concat(".","/logo512.png"),"/favicon.ico"]);self.addEventListener("install",s=>{const n=s;self.skipWaiting(),n.waitUntil(caches.open(t).then(t=>t.addAll([...e])))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.filter(e=>e!==t).map(t=>caches.delete(t))))),self.clients.claim()}),self.addEventListener("message",t=>{const e=t;e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()});self.addEventListener("fetch",s=>{const n=s;if("GET"!==n.request.method)return;const a=new URL(n.request.url);"api.spotify.com"!==a.hostname?a.hostname===self.location.hostname||e.some(t=>a.pathname.includes(t))?n.respondWith((async e=>{try{const s=await caches.match(e);if(s)return s;const n=await fetch(e);return n&&200===n.status&&(await caches.open(t)).put(e,n.clone()),n}catch(s){return new Response("Offline",{status:503,headers:{"Content-Type":"text/plain"}})}})(n.request)):n.respondWith(fetch(n.request)):n.respondWith((async e=>{try{const n=e.clone();try{const s=await fetch(n);return s&&200===s.status&&(await caches.open(t)).put(e,s.clone()),s}catch(s){const t=await caches.match(e);if(t)return t;throw s}}catch(n){return new Response(JSON.stringify({error:"Voc\xea est\xe1 offline"}),{status:503,headers:{"Content-Type":"application/json"}})}})(n.request))})})();
//# sourceMappingURL=service-worker.js.map